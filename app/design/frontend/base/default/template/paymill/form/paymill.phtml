<?php $_code=$this->getMethodCode() ?> 
<!-- 
    The payment form.
    Important: do not process any card data to the server (leave name attribute away)
-->
<ul class="form-list" id="payment_form_<?php echo $_code ?>" style="display: none">
    <li>
        <img src="<?php echo $this->getSkinUrl('images/paymill/icon_mastercard.png')?>" />
        <img src="<?php echo $this->getSkinUrl('images/paymill/icon_visa.png')?>" />
    </li>
    <li>
        <label for="paymillcc_cardholder" class="required"><em>*</em><?php echo Mage::helper('paymillcc')->__('Credit Card Holder') ?></label>
        <div class="input-box">
            <input type="text" class="input-text" id="paymillcc_cardholder" value="" autocomplete="off">
            <div class="validation-advice" id="cardholder_error" style="display: none"></div>
        </div>
    </li>
    <li>
        <label for="paymillcc_number" class="required"><em>*</em><?php echo Mage::helper('paymillcc')->__('Credit Card Number') ?></label>
        <div class="input-box">
            <input type="text" id="paymillcc_number" class="input-text" value="" autocomplete="off"> 
            <div class="validation-advice" id="number_error" style="display: none"></div>
            <div id="paymill_card_type" style="display: none; color: #666; margin-top: 2px;"></div>
        </div>
    </li>
    <li>
        <label for="paymillcc_cvc" class="required"><em>*</em><?php echo Mage::helper('paymillcc')->__('Card Verification Number') ?></label>
        <div class="input-box">
            <input type="text" id="paymillcc_cvc" class="input-text" autocomplete="off" value="">
            <div class="validation-advice" id="cvc_error" style="display: none"></div>
        </div>
    </li>
    <li>
        <label for="paymillcc_expiry" class="required"><em>*</em><?php echo Mage::helper('paymillcc')->__('Expiration Date') ?></label>
        <div class="input-box">
            <div class="v-fix">
                <select id="paymillcc_expiry_month" class="month" autocomplete="off">
                    <option value="" selected="selected">--</option>
                    <option value="01">01 - <?php echo Mage::helper('paymillcc')->__('January'); ?></option>
                    <option value="02">02 - <?php echo Mage::helper('paymillcc')->__('February'); ?></option>
                    <option value="03">03 - <?php echo Mage::helper('paymillcc')->__('March'); ?></option>
                    <option value="04">04 - <?php echo Mage::helper('paymillcc')->__('April'); ?></option>
                    <option value="05">05 - <?php echo Mage::helper('paymillcc')->__('May'); ?></option>
                    <option value="06">06 - <?php echo Mage::helper('paymillcc')->__('June'); ?></option>
                    <option value="07">07 - <?php echo Mage::helper('paymillcc')->__('July'); ?></option>
                    <option value="08">08 - <?php echo Mage::helper('paymillcc')->__('August'); ?></option>
                    <option value="09">09 - <?php echo Mage::helper('paymillcc')->__('September'); ?></option>
                    <option value="10">10 - <?php echo Mage::helper('paymillcc')->__('October'); ?></option>
                    <option value="11">11 - <?php echo Mage::helper('paymillcc')->__('November'); ?></option>
                    <option value="12">12 - <?php echo Mage::helper('paymillcc')->__('December'); ?></option>
                </select>
            </div>
            <div class="v-fix">
                <select id="paymillcc_expiry_year" class="year" autocomplete="off">
                    <option value="" selected="selected">--</option>
                    <option value="2012">2012</option>
                    <option value="2013">2013</option>
                    <option value="2014">2014</option>
                    <option value="2015">2015</option>
                    <option value="2016">2016</option>
                    <option value="2017">2017</option>
                    <option value="2018">2018</option>
                    <option value="2019">2019</option>
                    <option value="2020">2020</option>
                    <option value="2021">2021</option>
                    <option value="2022">2022</option>
                </select>
            </div>
            <div class="validation-advice" id="expiry_error" style="display: none"></div>
        </div>
    </li>
    <li>
        <!-- this gets the transaction token -->
        <input type="hidden" id="paymill_order_amount" value="<?php print round($this->paymillPaymentAmount * 100); ?>">
        <input type="hidden" id="paymill_transaction_token" type="text" value="" name="payment[paymill_transaction_token]" />
    </li>
    <?php if ($this->showPaymillLabel) { ?>
    <li>
        <div class="paymill_powered"><div class="paymill_credits"><?php echo Mage::helper('paymillcc')->__('Secure credit card payment powered by') ?> <a href="http://www.paymill.de" target="_blank">Paymill</a></div></div>
    </li>
    <?php } ?>
</ul>
<!--
PaymillPayment
Wrapper version: <?php print $this->paymillLibVersion; ?>; 
API enpoint: <?php print $this->paymillApiEndpoint; ?>
-->
<script type="text/javascript">
    var PAYMILL_PUBLIC_KEY = '<?php print $this->paymillPublicApiKey; ?>';
</script>
<script type="text/javascript" src="<?php print $this->paymillBridgeEndpoint; ?>"></script>
<script type="text/javascript">

	Event.observe(document,'dom:loaded', function(){
		if(payment.paymillOverwritten) return;
		var orgPaymentSave = payment.save;
		payment.paymillOverwritten = true;
		payment.save = function(pass){
			if(pass) return orgPaymentSave.call(payment);

            if (payment.currentMethod == "paymillcc") {
                paymill_cc_payment_save_override();
            } else if (payment.currentMethod == "paymillelv") {
                paymill_elv_payment_save_override();
            } else {
            	orgPaymentSave.call(payment);
            }
		};
	});
	
    $('paymillcc_number').observe('keyup', function() {
        if (paymill.cardType($('paymillcc_number').getValue()) == "Visa") {
            $('paymill_card_type').update("Visa").show();
        } else if (paymill.cardType($('paymillcc_number').getValue()) == "MasterCard") {
            $('paymill_card_type').update("MasterCard").show();
        } else {
            $('paymill_card_type').hide();
        }
    });
    
    // is paymillPayment?
    function paymill_is_paymill_cc_payment() {
        return payment.currentMethod == "<?php print $_code; ?>";
    }

    // handler that is called when click on next step button
    function paymill_cc_payment_save_override() {
        if (paymill_is_paymill_cc_payment()) {
            paymill_cc_debug('Paymill payment method triggered');
            if (paymill_cc_validate()) {
                paymill_cc_debug('Validation successful');
                var cardholder = $('paymillcc_cardholder');
                var number = $('paymillcc_number');
                var expiry_month = $('paymillcc_expiry_month');
                var expiry_year = $('paymillcc_expiry_year');
                var cvc = $('paymillcc_cvc');
                paymill.createToken({
                    number: number.getValue(), 
                    exp_month: expiry_month.getValue(), 
                    exp_year: expiry_year.getValue(), 
                    cvc: cvc.getValue(),
                    cardholder: cardholder.getValue(),
                    amount_int: $('paymill_order_amount').getValue(),
                    currency: '<?php print $this->paymillPaymentCurrency; ?>'
                    }, paymill_cc_response_handler
                );
            }
        } else {
            payment.save(true);
        }
    }

    // paymill response handler
    function paymill_cc_response_handler(error, result) {
        paymill_cc_debug('Start Paymill response handler');
        if (error) {
            paymill_cc_debug('An API error occured ' + error.apierror);
        } else {
            paymill_cc_debug('Received a token: ' + result.token);
            $('paymill_transaction_token').setValue(result.token);
            payment.save(true);
        }
    }

    // validation
    function paymill_cc_validate() {

        var cardholder = $('paymillcc_cardholder');
        var number = $('paymillcc_number');
        var expiry_month = $('paymillcc_expiry_month');
        var expiry_year = $('paymillcc_expiry_year');
        var cvc = $('paymillcc_cvc');
        var cvc_error = $('cvc_error');
        var expiry_error = $('expiry_error');
        var number_error = $('number_error');
        var cardholder_error = $('cardholder_error');

        var result = true;

        paymill_cc_debug('Start form validation');

        // reset errors
        cardholder_error.hide();
        cvc_error.hide();
        expiry_error.hide();
        number_error.hide();

        // error messages
        error_msg_cardholder_missing = "<?php echo Mage::helper('paymillcc')->__('Credit Card Holder is missing') ?>";
        error_msg_cardnumber_invalid = "<?php echo Mage::helper('paymillcc')->__('Your credit card number is invalid'); ?>";
        error_msg_expiry_invalid = "<?php echo Mage::helper('paymillcc')->__('The expiration date is invalid'); ?>";
        error_msg_cvc_invalid = "<?php echo Mage::helper('paymillcc')->__('The verification number is invalid'); ?>";

        if (cardholder.getValue() == "") {
            cardholder_error.update(error_msg_cardholder_missing).show();
            cardholder.addClassName('validation-failed');
            result = false;
        } else {
            cardholder.removeClassName('validation-failed');
        }

        if (!paymill.validateCardNumber(number.getValue())) {
            number_error.update(error_msg_cardnumber_invalid).show();
            number.addClassName('validation-failed');
            result = false;
        } else {
            number.removeClassName('validation-failed');
        }

        if (!paymill.validateCvc(cvc.getValue())) {
            cvc_error.update(error_msg_cvc_invalid).show();
            cvc.addClassName('validation-failed');
            result = false;
        } else {
            cvc.removeClassName('validation-failed');
        }

        if (!paymill.validateExpiry(expiry_month.getValue(), expiry_year.getValue())) {
            expiry_error.update(error_msg_expiry_invalid).show();
            expiry_month.addClassName('validation-failed');
            expiry_year.addClassName('validation-failed');
            result = false;
        } else {
            expiry_month.removeClassName('validation-failed');
            expiry_year.removeClassName('validation-failed');
        }

        return result;
    }

    // debug mode
    function paymill_cc_debug(message) {
        if (<?php print $this->paymillDebugMode; ?>) {
            console.log("[PaymillCC] " + message);
        }
    }

    // handling for onestep extension
    function paymill_onestep_cc(onestep_callback) {
        if (paymill_is_paymill_cc_payment()) {
            paymill_cc_debug('Paymill payment method triggered');
            if (paymill_cc_validate()) {
                paymill_cc_debug('Validation successful');
                var cardholder = $('paymillcc_cardholder');
                var number = $('paymillcc_number');
                var expiry_month = $('paymillcc_expiry_month');
                var expiry_year = $('paymillcc_expiry_year');
                var cvc = $('paymillcc_cvc');
                paymill.createToken({
                    number: number.getValue(), 
                    exp_month: expiry_month.getValue(), 
                    exp_year: expiry_year.getValue(), 
                    cvc: cvc.getValue(),
                    cardholder: cardholder.getValue(),
                    amount: '<?php print $this->paymillPaymentAmount; ?>',
                    currency: '<?php print $this->paymillPaymentCurrency; ?>'
                    }, function(error, result) {
                        paymill_cc_debug('Start Paymill response handler');
                        if (error) {
                            paymill_cc_debug('An API error occured ' + error.apierror);
                            return false;
                        } else {
                            paymill_cc_debug('Received a token: ' + result.token);
                            $('paymill_transaction_token').setValue(result.token);
                            onestep_callback();
                        }
                    }
                );
                return false;
            } else {
                return false;
            }
        } else {
            return false;
        }
        return false;
    }

</script>


